---
- name: Set system hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Set system timezone
  timezone:
    name: "{{ timezone }}"

- name: Add Kubernetes yum repository
  copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
      enabled=1
      gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude=kubelet,kubeadm,kubectl

- name: Change SELinux to permissive mode
  selinux:
    policy: targeted
    state: permissive
    
- name: Disable services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: no
    state: stopped
  loop:
    - firewalld
    - systemd-resolved

- name: Install Kubernetes packages
  yum:
    name: "{{ item }}"
    state: present
    disable_excludes: kubernetes
  loop:
    - kubelet
    - kubeadm
    - kubectl
    - keepalived
    - haproxy
    - crio

- name: Remove default cri-o bridge CNI
  ansible.builtin.copy:
    dest: /etc/cni/net.d/100-crio-bridge.conflist
    content: ""
    force: yes


- name: Persist kernel modules
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
  register: kernel_modules

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
  loop:
    - overlay
    - br_netfilter
  when: kernel_modules.changed

- name: Persist sysctl config
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
  register: sysctl_config

- name: Reload sysctl
  command: sysctl --system
  when: sysctl_config.changed

- name: Deploy keepalived healthcheck script
  register: healthcheck
  ansible.builtin.template:
    src: files/check_apiserver.sh.j2
    dest: /etc/keepalived/check_apiserver.sh
    owner: root
    group: root
    mode: '0755'

- name: Deploy keepalived config
  register: keepalived
  ansible.builtin.template:
    src: files/keepalived.conf.j2
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0644'

- name: Enable and start keepalived
  systemd:
    name: keepalived
    state: restarted
    enabled: yes
  when: keepalived.changed or healthcheck.changed

- name: Deploy haproxy VIP configuration
  register: haproxy
  ansible.builtin.template:
    src: files/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: '0755'

- name: Enable and start haproxy
  systemd:
    name: haproxy
    state: restarted
    enabled: yes
  when: haproxy.changed

- name: Disable swap
  block:
    - name: Remove zram-generator-defaults package
      yum:
        name: zram-generator-defaults
        state: absent
      register: package_removed

    - name: Disable all swap partitions
      command: swapoff -a
      when: package_removed.changed

- name: Create symlink from kubectl to k
  file:
    src: /usr/bin/kubectl
    dest: /usr/bin/k
    state: link

- name: Enable and start services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - kubelet
    - crio
    - keepalived
    - haproxy



